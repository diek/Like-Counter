[{"model": "posts.post", "pk": 1, "fields": {"author": 1, "title": "Python Tools - Django-Extensions", "content": "Django Extensions is a collection of custom extensions for the Django Framework.\r\n\r\nThese include management commands, additional database fields, admin extensions and much more.", "created_at": "2025-02-26T15:46:42.587Z", "updated_at": "2025-02-26T15:46:42.587Z"}}, {"model": "posts.post", "pk": 2, "fields": {"author": 2, "title": "Blowing Stuff Up", "content": "Use lots of C4", "created_at": "2025-02-26T17:54:58.539Z", "updated_at": "2025-02-26T17:54:58.539Z"}}, {"model": "posts.post", "pk": 3, "fields": {"author": 9, "title": "Getting Started with Django", "content": "This post covers the basics of setting up a Django project, including creating a virtual environment, installing Django, and setting up your first app.", "created_at": "2025-02-26T23:26:03.940Z", "updated_at": "2025-02-26T23:26:03.940Z"}}, {"model": "posts.post", "pk": 4, "fields": {"author": 6, "title": "Understanding Django Models", "content": "Learn how to create and manage models in Django, define relationships between tables, and interact with the database using Django's ORM.", "created_at": "2025-02-26T23:26:03.945Z", "updated_at": "2025-02-26T23:26:03.945Z"}}, {"model": "posts.post", "pk": 5, "fields": {"author": 8, "title": "Django Views and Templates", "content": "An in-depth look at Django views and templates, including function-based views, class-based views, and rendering templates in your app.", "created_at": "2025-02-26T23:26:03.947Z", "updated_at": "2025-02-26T23:26:03.947Z"}}, {"model": "posts.post", "pk": 6, "fields": {"author": 15, "title": "Handling Forms in Django", "content": "Explore how to handle forms in Django, from creating form classes to validating data and handling form submissions securely.", "created_at": "2025-02-26T23:26:03.948Z", "updated_at": "2025-02-26T23:26:03.948Z"}}, {"model": "posts.post", "pk": 7, "fields": {"author": 11, "title": "Django Admin Interface Customization", "content": "Learn how to customize the Django admin interface to suit your application's needs, including creating custom admin views and forms.", "created_at": "2025-02-26T23:26:03.950Z", "updated_at": "2025-02-26T23:26:03.950Z"}}, {"model": "posts.post", "pk": 8, "fields": {"author": 11, "title": "Securing Django Applications", "content": "This post covers best practices for securing your Django application, including using Djangoâ€™s built-in security features and techniques for preventing common attacks.", "created_at": "2025-02-26T23:26:03.952Z", "updated_at": "2025-02-26T23:26:03.952Z"}}, {"model": "posts.post", "pk": 9, "fields": {"author": 13, "title": "Deploying Django Projects", "content": "A guide to deploying your Django project to production, covering popular platforms like Heroku and DigitalOcean, along with tips on setting up databases and configuring servers.", "created_at": "2025-02-26T23:26:03.953Z", "updated_at": "2025-02-26T23:26:03.953Z"}}, {"model": "posts.post", "pk": 10, "fields": {"author": 15, "title": "Understanding Python Lists", "content": "In this post, we explore Python lists and how to use them effectively. We cover list creation, indexing, and common methods like append and pop.", "created_at": "2025-02-26T23:26:03.955Z", "updated_at": "2025-02-26T23:26:03.955Z"}}, {"model": "posts.post", "pk": 11, "fields": {"author": 8, "title": "Mastering Python Dictionaries", "content": "This post delves into Python dictionaries, focusing on creating them, accessing values, and using common methods like keys(), values(), and items().", "created_at": "2025-02-26T23:26:03.956Z", "updated_at": "2025-02-26T23:26:03.956Z"}}, {"model": "posts.post", "pk": 12, "fields": {"author": 6, "title": "Working with Python Loops", "content": "Explore different types of loops in Python, including for and while loops, and how to use them in real-world scenarios for iterating over data.", "created_at": "2025-02-26T23:26:03.958Z", "updated_at": "2025-02-26T23:26:03.958Z"}}, {"model": "posts.post", "pk": 13, "fields": {"author": 14, "title": "Handling Exceptions in Python", "content": "Learn how to handle errors in Python using try, except, else, and finally blocks to write more robust and error-resistant code.", "created_at": "2025-02-26T23:26:03.959Z", "updated_at": "2025-02-26T23:26:03.959Z"}}, {"model": "posts.post", "pk": 14, "fields": {"author": 18, "title": "Introduction to Python Functions", "content": "This post covers the fundamentals of Python functions, including function definition, parameters, and return values. It also touches on lambda functions.", "created_at": "2025-02-26T23:26:03.961Z", "updated_at": "2025-02-26T23:26:03.961Z"}}, {"model": "posts.post", "pk": 15, "fields": {"author": 13, "title": "Exploring Python Classes and Objects", "content": "A beginner's guide to Python's object-oriented programming features, including class creation, attributes, methods, and inheritance.", "created_at": "2025-02-26T23:26:03.962Z", "updated_at": "2025-02-26T23:26:03.962Z"}}]